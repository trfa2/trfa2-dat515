services:
  app:
    image: webapp:${VERSION:-latest}
    restart: always
    environment:
      - DB_HOST=database
      - REDIS_HOST=cache
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 256M
          cpus: "0.25"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  database:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_DATABASE: webapp
      MYSQL_USER: webuser
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - db_data:/var/lib/mysql
    secrets:
      - db_root_password
      - db_password
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "1.0"
    networks:
      - app-network

  cache:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache_data:/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - app
    networks:
      - app-network

volumes:
  db_data:
    driver: local
  cache_data:
    driver: local

networks:
  app-network:
    driver: bridge

secrets:
  db_root_password:
    # TODO: Pass the file containing the root password for MySQL
    file: 
  db_password:
    file: ./secrets/db_password.txt
